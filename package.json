{
  "name": "@datr.tech/exim-mta",
  "description": "datr.tech exim mail transfer agent",
  "version": "0.3.3",
  "private": false,
  "homepage": "https://github.com/datr.tech/exim-mta",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/datr.tech/exim-mta.git"
  },
  "keywords": [
    "@app-emta",
    "@datr.tech",
    "bash",
    "docker",
    "mta",
    "email",
    "exim"
  ],
  "license": "MIT",
  "author": "datr.tech admin <admin@datr.tech>",
  "engines": {
    "node": ">=20.0.9",
    "npm": ">=10.1.0"
  },
  "scripts": {
    "bashunit:load": "./scripts/bashunit_load.sh",
    "certs:generate": "./scripts/generate_certs.sh",
    "changelog": "npx auto-changelog",
    "changelog:add": "git add ./CHANGELOG.md",
    "changelog:commit": "git commit -m 'ci: update changelog' --no-verify",
    "clean": "npm-run-all clean:conf",
    "clean:conf": "sh -c 'rm -f $(ls -a ./ | grep .bak)'",
    "commit-msg": "npx commitlint --edit",
    "docker:up": "docker compose up",
    "docker:down": "docker compose down",
    "docker:exec": "docker exec -it $(docker ps -a -q) /bin/sh",
    "docker:rmi": "docker rmi $(docker image ls -a -q)",
    "format": "npm run format:check",
    "format:check": "npm-run-all format:config:check format:scripts:check format:test:check",
    "format:write": "npm-run-all format:config:write format:scripts:write format:test:write",
    "format:config:base": "npx prettier ./*.conf ./.env.* ./compose.yaml ./*.{json,mjs}",
    "format:config:check": "npm run format:config:base -- --check",
    "format:config:write": "npm run format:config:base -- --write",
    "format:scripts:base": "npx prettier ./scripts/*.sh",
    "format:scripts:check": "npm run format:scripts:base -- --check",
    "format:scripts:write": "npm run format:scripts:base -- --write",
    "format:test:base": "npx prettier ./test/*.sh",
    "format:test:check": "npm run format:test:base -- --check",
    "format:test:write": "npm run format:test:base -- --write",
    "husky:init": "npx husky",
    "lint": "npm-run-all lint:scripts lint:test",
    "lint:docker": "docker build --check --build-arg 'BUILDKIT_DOCKERFILE_CHECK=error=true' .",
    "lint:scripts": "npx shellcheck ./scripts/*.sh",
    "lint:test": "npx shellcheck ./test/*.sh",
    "postinstall": "npm-run-all husky:init template:bashunit:cp template:env:cp bashunit:load",
    "poststop": "sh -c 'cd ../exim-db && npm run clean'",
    "precommit": "npm-run-all format lint spell",
    "prepush": "npm run lint",
    "prestart": "sh -c 'cd ../exim-db && npm run sql:generate'",
    "preversion": "npm-run-all format lint spell",
    "spell": "npx cspell .",
    "start": "npm run docker:up",
    "stop": "npm-run-all docker:down docker:rmi",
    "ts": "npm run test:single",
    "template:bashunit:gen": "scripts/generate_conf_template.sh .bashunit.conf",
    "template:bashunit:cp": "sh -c 'cp ./.bashunit.conf.TEMPLATE ./.bashunit.conf'",
    "template:env": "scripts/generate_conf_template.sh .env",
    "template:env:cp": "sh -c 'cp ./.env.TEMPLATE ./.env'",
    "test": "npm run test:unit",
    "test:base": "./lib/bashunit --env ./.bashunit.conf",
    "test:single": "npm run test:base -- ./test/temp.test.sh",
    "test:unit": "npm run test:base -- ./test/*.test.sh",
    "version": "npm-run-all changelog"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "auto-changelog": "^2.5.0",
    "cspell": "^9.0.1",
    "husky": "^9.1.7",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.5.3",
    "prettier-plugin-sh": "^0.17.4",
    "prettier-plugin-sort-json": "^4.1.1",
    "shellcheck": "^3.1.0"
  }
}
